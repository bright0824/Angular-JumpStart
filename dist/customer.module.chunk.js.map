{"version":3,"sources":["/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/can-activate.guard.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/can-deactivate.guard.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-details.component.css","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-details.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-details.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-edit.component.css","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-edit.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-edit.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-orders.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-orders.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-routing.module.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer.module.ts"],"names":[],"mappings":"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","file":"customer.module.chunk.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { CanActivate, Router, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs/Observable';\n\nimport { AuthService } from '../core/services/auth.service';\n\n@Injectable()\nexport class CanActivateGuard implements CanActivate {\n\n  constructor(private authService: AuthService, private router: Router) { } \n\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n    if (this.authService.isAuthenticated) { \n        return true;\n    }\n\n    //Track URL user is trying to go to so we can send them there after logging in\n    this.authService.redirectUrl = state.url;\n    this.router.navigate(['/login']);\n    return false;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/can-activate.guard.ts","import { Injectable } from '@angular/core';\nimport { CanDeactivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable }    from 'rxjs/Observable';\n\nimport { CustomerEditComponent } from './customer-edit.component';\n\n@Injectable()\nexport class CanDeactivateGuard implements CanDeactivate<CustomerEditComponent> {\n\n  canDeactivate(\n    component: CustomerEditComponent,\n    route: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot\n  ): Observable<boolean> | Promise<boolean> | boolean {\n\n    console.log(`CustomerId: ${route.parent.params['id']} URL: ${state.url}`);\n\n    //Check with component to see if we're able to deactivate\n    return component.canDeactivate();\n  }\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/can-deactivate.guard.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".details-image {\\n    height:100px;width:100px;margin-top:10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-details.component.css\n// module id = ../../../../../src/app/customer/customer-details.component.css\n// module chunks = customer.module","module.exports = \"<div *ngIf=\\\"customer\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <img src=\\\"assets/images/{{customer.gender | lowercase}}.png\\\" class=\\\"details-image\\\" />\\n    </div>\\n    <div class=\\\"col-md-10\\\">\\n      <h4>    \\n          {{ customer.firstName | capitalize }} {{ customer.lastName | capitalize }}&nbsp;          \\n      </h4>\\n      <br />\\n      {{ customer.address }}\\n      <br />\\n      {{ customer.city }}, {{ customer.state.name }}\\n    </div>\\n  </div>    \\n  <br /><br />\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <cm-map [latitude]=\\\"customer.latitude\\\" \\n           [longitude]=\\\"customer.longitude\\\" \\n           [zoom]=\\\"10\\\" \\n           [enabled]=\\\"mapEnabled\\\"\\n           [markerText]=\\\"'<h3>' + customer.firstName + ' ' + customer.lastName + '</h3>' + customer.city + ', ' + customer.state.name\\\"></cm-map>\\n    </div>\\n  </div>\\n</div>   \\n<div *ngIf=\\\"!customer\\\" class=\\\"row\\\">\\n   No customer found\\n</div>  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-details.component.html\n// module id = ../../../../../src/app/customer/customer-details.component.html\n// module chunks = customer.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { DataService } from '../core/services/data.service';\n\n@Component({\n  selector: 'cm-customer-details',\n  templateUrl: './customer-details.component.html',\n  styleUrls: [ './customer-details.component.css' ]\n})\nexport class CustomerDetailsComponent implements OnInit {\n\n  customer: ICustomer;\n  mapEnabled: boolean;\n\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit() {\n      //Subscribe to params so if it changes we pick it up. Could use this.route.parent.snapshot.params[\"id\"] to simplify it.\n      this.route.parent.params.subscribe((params: Params) => {\n        let id = +params['id'];\n        this.dataService.getCustomer(id)\n            .subscribe((customer: ICustomer) => {\n              this.customer = customer;\n              this.mapEnabled = true;\n            });\n      });\n  }\n\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-details.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".customer-form input[type='text'], \\n.customer-form input[type='number'],\\n.customer-form input[type='email'],\\n.customer-form select {\\n    width:100%;\\n}\\n\\n.customer-form .ng-invalid {\\n  border-left: 5px solid #a94442;\\n}\\n\\n.customer-form .ng-valid {\\n  border-left: 5px solid #42A948;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-edit.component.css\n// module id = ../../../../../src/app/customer/customer-edit.component.css\n// module chunks = customer.module","module.exports = \"<div>\\n  <form (ngSubmit)=\\\"submit()\\\" #customerForm=\\\"ngForm\\\" class=\\\"customer-form\\\" novalidate>\\n    <div class=\\\"form-group\\\">\\n      <label>First Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"firstName\\\" [(ngModel)]=\\\"customer.firstName\\\" #firstName=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"firstName.pristine || firstName.valid\\\">First Name is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Last Name</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"lastName\\\" [(ngModel)]=\\\"customer.lastName\\\" #lastName=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"lastName.pristine || lastName.valid\\\">Last Name is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>Address</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"address\\\" [(ngModel)]=\\\"customer.address\\\" #address=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"address.pristine || address.valid\\\">Address is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>City</label>\\n      <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" [(ngModel)]=\\\"customer.city\\\" #city=\\\"ngModel\\\" required>\\n      <div class=\\\"alert alert-danger\\\" [hidden]=\\\"city.pristine || city.valid\\\">City is required</div>\\n    </div>\\n    <div class=\\\"form-group\\\">\\n      <label>State</label>\\n      <select class=\\\"form-control\\\" \\n              [(ngModel)]=\\\"customer.state.abbreviation\\\"\\n              name=\\\"state\\\" \\n              required>\\n          <option *ngFor=\\\"let state of states\\\" [ngValue]=\\\"state.abbreviation\\\">{{state.name}}</option>\\n      </select>\\n    </div>\\n    <div *ngIf=\\\"customer\\\">\\n      <div class=\\\"alert alert-warning\\\" *ngIf=\\\"customer.id && deleteMessageEnabled\\\">\\n         Delete Customer?&nbsp;&nbsp;<button class=\\\"btn btn-danger\\\" (click)=\\\"delete($event)\\\">Yes</button>&nbsp;&nbsp;\\n         <button class=\\\"btn btn-default\\\" (click)=\\\"deleteMessageEnabled = false\\\">No</button>\\n      </div>\\n      <button class=\\\"btn btn-danger\\\" *ngIf=\\\"customer.id && !deleteMessageEnabled\\\" (click)=\\\"deleteMessageEnabled = true\\\">Delete</button>&nbsp;&nbsp;\\n\\n      <div class=\\\"pull-right\\\" *ngIf=\\\"!deleteMessageEnabled\\\">\\n        <button class=\\\"btn btn-default\\\" (click)=\\\"cancel($event)\\\">Cancel</button>&nbsp;&nbsp;\\n        <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"customerForm.pristine || !customerForm.valid\\\">{{ operationText }}</button>\\n      </div>\\n    </div>\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"errorMessage != null\\\">{{ errorMessage }}</div>\\n  </form>\\n  <br />\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-edit.component.html\n// module id = ../../../../../src/app/customer/customer-edit.component.html\n// module chunks = customer.module","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router, ActivatedRoute, Params } from '@angular/router';\nimport { NgForm } from '@angular/forms';\n\nimport { DataService } from '../core/services/data.service';\nimport { ModalService, IModalContent } from '../core/modal/modal.service';\nimport { ICustomer, IState } from '../shared/interfaces';\nimport { GrowlerService, GrowlerMessageType } from '../core/growler/growler.service';\n\n@Component({\n  selector: 'cm-customer-edit',\n  templateUrl: './customer-edit.component.html',\n  styleUrls: [ './customer-edit.component.css' ]\n})\nexport class CustomerEditComponent implements OnInit {\n\n  customer: ICustomer = \n  {\n    id: 0,\n    firstName: '',\n    lastName: '',\n    gender: '',\n    address: '',\n    city: '',\n    state: {\n        abbreviation: '',\n        name: ''\n    }\n  };\n  states: IState[];\n  errorMessage: string;\n  deleteMessageEnabled: boolean;\n  operationText: string = 'Insert';\n  @ViewChild('customerForm') customerForm: NgForm;\n  \n  constructor(private router: Router, \n              private route: ActivatedRoute, \n              private dataService: DataService,\n              private growler: GrowlerService,\n              private modalService: ModalService) { }\n\n  ngOnInit() {\n      //Subscribe to params so if it changes we pick it up. Don't technically need that here\n      //since param won't be changing while component is alive. \n      //Could use this.route.parent.snapshot.params[\"id\"] to simplify it.\n      this.route.parent.params.subscribe((params: Params) => {\n        let id = +params['id'];\n        if (id !== 0) {\n          this.operationText = 'Update';\n          this.getCustomer(id);\n        }\n      });\n\n      this.dataService.getStates().subscribe((states: IState[]) => this.states = states);\n  }\n\n  getCustomer(id: number) {\n      this.dataService.getCustomer(id).subscribe((customer: ICustomer) => {\n        this.customer = customer;\n      });\n  }\n\n  submit() {\n      if (this.customer.id === 0) {\n        this.dataService.insertCustomer(this.customer)\n          .subscribe((insertedCustomer: ICustomer) => {\n            if (insertedCustomer) {\n              //Mark form as pristine so that CanDeactivateGuard won't prompt before navigation\n              this.customerForm.form.markAsPristine();\n              this.router.navigate(['/customers']);\n            } else {\n              const msg = 'Unable to insert customer';\n              this.growler.growl(msg, GrowlerMessageType.Danger);\n              this.errorMessage = msg;\n            }\n          },\n          (err: any) => console.log(err));\n      } else {\n        this.dataService.updateCustomer(this.customer)\n          .subscribe((status: boolean) => {\n            if (status) {\n              //Mark form as pristine so that CanDeactivateGuard won't prompt before navigation\n              this.customerForm.form.markAsPristine();\n              this.growler.growl('Operation performed successfully.', GrowlerMessageType.Success);\n              //this.router.navigate(['/customers']);\n            }\n            else {\n              const msg = 'Unable to update customer';\n              this.growler.growl(msg, GrowlerMessageType.Danger);\n              this.errorMessage = msg;\n            }\n        },\n        (err: any) => console.log(err));\n      }\n  }\n  \n  cancel(event: Event) {\n    event.preventDefault();\n    //Route guard will take care of showing modal dialog service if data is dirty\n    this.router.navigate(['/customers']);\n  }\n\n  delete(event: Event) {\n    event.preventDefault();\n    this.dataService.deleteCustomer(this.customer.id)\n        .subscribe((status: boolean) => {\n          if (status) {\n            this.router.navigate(['/customers']);\n          }\n          else {\n            this.errorMessage = 'Unable to delete customer';\n          }\n        },\n        (err) => console.log(err));\n  }\n\n  canDeactivate(): Promise<boolean> | boolean {\n    if (!this.customerForm.dirty) {\n      return true;\n    }\n\n    //Dirty show display modal dialog to user to confirm leaving\n    const modalContent: IModalContent = {\n      header: 'Lose Unsaved Changes?',\n      body: 'You have unsaved changes! Would you like to leave the page and lose them?',\n      cancelButtonText: 'Cancel',\n      OKButtonText: 'Leave'\n    }\n    return this.modalService.show(modalContent);\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-edit.component.ts","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row\\\" *ngIf=\\\"customer && customer.orders\\\">\\n        <h4>Orders for {{ customer.firstName | capitalize }} {{ customer.lastName | capitalize }}</h4>\\n        <br />\\n        <table class=\\\"table table-striped table-hover orders-table\\\">\\n            <tr *ngFor=\\\"let order of customer.orders;trackBy:ordersTrackBy\\\">\\n                <td>{{ order.productName }}</td>\\n                <td class=\\\"text-right\\\">{{ order.itemCost | currency:'USD':'symbol' }}</td>    \\n            </tr>\\n            <tr class=\\\"summary-border\\\">\\n                <td>&nbsp;</td>\\n                <td class=\\\"text-right\\\">{{ customer.orderTotal | currency:'USD':'symbol' }}</td>\\n            </tr>\\n        </table>\\n    </div>\\n    <div *ngIf=\\\"customer && !customer.orders\\\" class=\\\"row\\\">\\n        No orders found\\n    </div> \\n    <div *ngIf=\\\"!customer\\\" class=\\\"row\\\">\\n        No customer found\\n    </div>  \\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-orders.component.html\n// module id = ../../../../../src/app/customer/customer-orders.component.html\n// module chunks = customer.module","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\n\nimport { DataService } from '../core/services/data.service';\nimport { ICustomer, IOrder, IOrderItem } from '../shared/interfaces';\n\n@Component({\n  selector: 'cm-customer-orders',\n  templateUrl: './customer-orders.component.html'\n})\nexport class CustomerOrdersComponent implements OnInit {\n\n  orders: IOrder[] = [];\n  customer: ICustomer;\n\n  constructor(private route: ActivatedRoute, private dataService: DataService) { }\n\n  ngOnInit() {\n      //Subscribe to params so if it changes we pick it up.  Could use this.route.parent.snapshot.params[\"id\"] to simplify it.\n      this.route.parent.params.subscribe((params: Params) => {\n        let id = +params['id'];\n        this.dataService.getCustomer(id).subscribe((customer: ICustomer) => {\n          this.customer = customer;\n        });\n      });\n  }\n\n  ordersTrackBy(index: number, orderItem: any) {\n    return index;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-orders.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CustomerComponent }   from './customer.component';\nimport { CustomerOrdersComponent } from './customer-orders.component';\nimport { CustomerDetailsComponent } from './customer-details.component';\nimport { CustomerEditComponent } from './customer-edit.component';\nimport { CanActivateGuard } from './can-activate.guard';\nimport { CanDeactivateGuard } from './can-deactivate.guard';\n\nconst routes: Routes = [\n  { \n    path: '', \n    component: CustomerComponent,\n    children: [\n      { path:'orders',  component: CustomerOrdersComponent },\n      { path:'details', component: CustomerDetailsComponent },\n      { path:'edit', \n        component: CustomerEditComponent,  \n        canActivate: [ CanActivateGuard ],\n        canDeactivate: [ CanDeactivateGuard ] \n      }\n    ]\n  }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ],\n  providers:    [ CanActivateGuard, CanDeactivateGuard ]\n})\nexport class CustomerRoutingModule { \n  static components = [ CustomerComponent, CustomerOrdersComponent, CustomerDetailsComponent, CustomerEditComponent ];\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer-routing.module.ts","module.exports = \"<div class=\\\"orders view\\\">\\n    <div class=\\\"container\\\">\\n        <header>\\n            <h3><span class=\\\"glyphicon glyphicon-user\\\"></span>&nbsp;&nbsp;Customer Information</h3>\\n        </header>\\n        <br />\\n        <div class=\\\"navbar\\\">\\n            <ul class=\\\"nav navbar-nav\\\">\\n                <li class=\\\"toolbar-item\\\">\\n                    <a routerLink=\\\"details\\\" routerLinkActive=\\\"active\\\">\\n                       <span class=\\\"glyphicon glyphicon-list\\\"></span>&nbsp;&nbsp;Customer Details\\n                    </a>\\n                </li>\\n                <li class=\\\"toolbar-item\\\">\\n                    <a routerLink=\\\"orders\\\" routerLinkActive=\\\"active\\\">\\n                        <span class=\\\"glyphicon glyphicon-tags\\\"></span>&nbsp;&nbsp;Customer Orders\\n                    </a>\\n                </li>\\n                <li class=\\\"toolbar-item\\\">\\n                    <a routerLink=\\\"edit\\\" routerLinkActive=\\\"active\\\">\\n                        <span class=\\\"glyphicon glyphicon-edit\\\"></span>&nbsp;&nbsp;Edit Customer\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\\n        <div class=\\\"container\\\">\\n            <router-outlet></router-outlet>\\n            <br />\\n            <br />\\n            <a routerLink=\\\"/customers\\\">View all Customers</a>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer.component.html\n// module id = ../../../../../src/app/customer/customer.component.html\n// module chunks = customer.module","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\n@Component({ \n  selector: 'cm-orders',\n  templateUrl: './customer.component.html'\n})\nexport class CustomerComponent implements OnInit {\n  \n    //displayMode: CustomerDisplayModeEnum;\n    //displayModeEnum = CustomerDisplayModeEnum;\n  \n    constructor(private router: Router) { }\n\n    ngOnInit() {\n\n      //No longer needed due to routerLinkActive feature in Angular\n      // const path = this.router.url.split('/')[3];\n      // switch (path) {\n      //   case 'details':\n      //     this.displayMode = CustomerDisplayModeEnum.Details;\n      //     break;\n      //   case 'orders':\n      //     this.displayMode = CustomerDisplayModeEnum.Orders;\n      //     break;\n      //   case 'edit':\n      //     this.displayMode = CustomerDisplayModeEnum.Edit;\n      //     break;\n      // }\n    }\n\n}\n\n// enum CustomerDisplayModeEnum {\n//   Details=0,\n//   Orders=1,\n//   Edit=2\n// }\n\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer.component.ts","import { NgModule }      from '@angular/core';\n\nimport { SharedModule }   from '../shared/shared.module';\nimport { CustomerRoutingModule } from './customer-routing.module';\n\n@NgModule({\n  imports:      [ CustomerRoutingModule, SharedModule ],\n  declarations: [ CustomerRoutingModule.components ]\n})\nexport class CustomerModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customer/customer.module.ts"],"sourceRoot":"webpack:///"}