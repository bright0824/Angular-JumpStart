{"version":3,"sources":["/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-card.component.css","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-card.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-card.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-grid.component.css","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-grid.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-grid.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-routing.module.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers.component.html","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers.component.ts","/Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers.module.ts"],"names":[],"mappings":"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","file":"customers.module.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".card-container {\\n    width:85%;\\n}\\n\\n.card {\\n    background-color:#fff;\\n    border: 1px solid #d4d4d4;\\n    height:120px;\\n    margin-bottom: 20px;\\n    position: relative;\\n}\\n\\n.card-header {\\n    background-color:#027FF4;\\n    font-size:14pt;\\n    color:white;\\n    padding:5px;\\n    width:100%;\\n}\\n\\n.card-close {\\n    color: white;\\n    font-weight:bold;\\n    margin-right:5px;\\n}\\n\\n.card-body {\\n    padding-left: 5px;\\n}\\n\\n.card-body-left {\\n    margin-top: -5px;\\n}\\n\\n.card-body-right {\\n    margin-left: 20px;\\n    margin-top: 2px;\\n}\\n\\n.card-body-content {\\n    width: 100px;\\n}\\n\\n.card-image {\\n    height:50px;width:50px;margin-top:10px;\\n}\\n\\n.white {\\n    color: white;\\n}\\n\\n.white:hover {\\n    color: white;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-card.component.css\n// module id = ../../../../../src/app/customers/customers-card.component.css\n// module chunks = customers.module","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row card-container\\\">\\n        <div class=\\\"col-sm-6 col-md-4 col-lg-3\\\" *ngFor=\\\"let customer of customers;trackBy:trackbyService.customer\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-header\\\">\\n                    <a [routerLink]=\\\"['/customers',customer.id,'details']\\\" class=\\\"white\\\">\\n                        {{customer.firstName | capitalize }} {{ customer.lastName | capitalize }} \\n                    </a>\\n                    <a [routerLink]=\\\"['/customers',customer.id,'edit']\\\">\\n                        <i title=\\\"Edit\\\"  \\n                           class=\\\"pull-right glyphicon glyphicon-edit edit-icon white\\\"></i>\\n                    </a>\\n                </div>\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"clearfix\\\">\\n                        <div class=\\\"pull-left card-body-left\\\">\\n                            <a href=\\\"#\\\" class=\\\"white\\\">\\n                                <img src=\\\"assets/images/{{customer.gender | lowercase}}.png\\\" class=\\\"card-image\\\" />\\n                            </a>\\n                        </div>\\n                        <div class=\\\"pull-left card-body-right\\\">\\n                            <div class=\\\"card-body-content\\\">{{customer.city | trim }}, {{customer.state.name}}</div>\\n                            <a [routerLink]=\\\"['/customers',customer.id,'orders']\\\">View Orders</a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div *ngIf=\\\"!customers.length\\\">\\n            No Records Found\\n        </div>\\n    </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-card.component.html\n// module id = ../../../../../src/app/customers/customers-card.component.html\n// module chunks = customers.module","import { Component, Input, OnInit, ChangeDetectionStrategy,\n         trigger, state, style, transition, animate } from '@angular/core';\n\nimport { ICustomer } from '../shared/interfaces';\nimport { TrackByService } from '../core/services/trackby.service';\n\n@Component({ \n  selector: 'cm-customers-card', \n  templateUrl: './customers-card.component.html',\n  styleUrls: [ './customers-card.component.css' ],\n  //Add [@flyInOut]=\"'in'\" into template on card\n  // animations: [\n  //   trigger('flyInOut', [\n  //     state('in', style({transform: 'translateX(0)', opacity: 1})),\n  //     transition('void => *', [\n  //       style({transform: 'translateX(25%)', opacity: 0}),\n  //       animate(300)\n  //     ]),\n  //     transition('* => void', [\n  //       animate(300, style({transform: 'translateX(-25%)', opacity: 1}))\n  //     ])\n  //   ])\n  // ],\n  //When using OnPush detectors, then the framework will check an OnPush \n  //component when any of its input properties changes, when it fires \n  //an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\n  changeDetection: ChangeDetectionStrategy.OnPush \n})\nexport class CustomersCardComponent implements OnInit {\n\n  @Input() customers: ICustomer[] = [];\n  \n  constructor(public trackbyService: TrackByService) { }\n  \n  ngOnInit() {\n\n  }\n\n}\n\n\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-card.component.ts","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".grid-container  div {\\n    padding-left: 0px;\\n}\\n\\n.grid-container td {\\n    vertical-align: middle;\\n}\\n\\n.grid-image {\\n    height:50px;width:50px;margin-top:10px;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-grid.component.css\n// module id = ../../../../../src/app/customers/customers-grid.component.css\n// module chunks = customers.module","module.exports = \"<div class=\\\"container\\\">\\n    <div class=\\\"row grid-container\\\">\\n        <div class=\\\"col-md-10\\\">\\n            <div class=\\\"table\\\">\\n                <table class=\\\"table table-striped table-hover\\\">\\n                    <thead>\\n                        <tr>\\n                            <th>&nbsp;</th>\\n                            <th cm-sort-by=\\\"firstName\\\" (sorted)=\\\"sort($event)\\\">First Name</th>\\n                            <th cm-sort-by=\\\"lastName\\\" (sorted)=\\\"sort($event)\\\">Last Name</th>\\n                            <th cm-sort-by=\\\"address\\\" (sorted)=\\\"sort($event)\\\">Address</th>\\n                            <th cm-sort-by=\\\"city\\\" (sorted)=\\\"sort($event)\\\">City</th>\\n                            <th cm-sort-by=\\\"state.name\\\" (sorted)=\\\"sort($event)\\\">State</th>\\n                            <!-- Or you can do this directly rather than using sort-by directive -->\\n                            <th (click)=\\\"sort('orderTotal')\\\">Order Total</th>\\n                            <th>&nbsp;</th>\\n                        </tr>\\n                    </thead>\\n                    <tbody>\\n                        <tr *ngFor=\\\"let customer of customers;trackBy:trackbyService.customer\\\">\\n                            <td><img src=\\\"assets/images/{{ customer.gender | lowercase }}.png\\\"\\n                                    class=\\\"grid-image\\\" alt=\\\"Customer Image\\\" /></td>\\n                            <td><a [routerLink]=\\\"['/customers',customer.id,'details']\\\">{{ customer.firstName | capitalize }}</a></td>\\n                            <td>{{ customer.lastName | capitalize }}</td>\\n                            <td>{{ customer.address }}</td>\\n                            <td>{{ customer.city | trim }}</td>\\n                            <td>{{ customer.state.name }}</td>\\n                            <td>{{ customer.orderTotal | currency:'USD':true }}</td>\\n                            <td><a [routerLink]=\\\"['/customers',customer.id,'orders']\\\">View Orders</a></td>\\n                        </tr>\\n                        <tr *ngIf=\\\"!customers.length\\\">\\n                            <td>&nbsp;</td>\\n                            <td colspan=\\\"7\\\">No Records Found</td>\\n                        </tr>\\n                    </tbody>\\n                </table>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-grid.component.html\n// module id = ../../../../../src/app/customers/customers-grid.component.html\n// module chunks = customers.module","import { Component, Input, OnInit, ChangeDetectionStrategy } from '@angular/core';\n\nimport { SorterService } from '../core/services/sorter.service';\nimport { TrackByService } from '../core/services/trackby.service';\nimport { ICustomer } from '../shared/interfaces';\n\n@Component({ \n  selector: 'cm-customers-grid', \n  templateUrl: './customers-grid.component.html',\n  styleUrls: [ './customers-grid.component.css' ],\n  //When using OnPush detectors, then the framework will check an OnPush \n  //component when any of its input properties changes, when it fires \n  //an event, or when an observable fires an event ~ Victor Savkin (Angular Team)\n  changeDetection: ChangeDetectionStrategy.OnPush \n})\nexport class CustomersGridComponent implements OnInit {\n\n  @Input() customers: ICustomer[] = [];\n\n  constructor(private sorterService: SorterService, public trackbyService: TrackByService) { }\n   \n  ngOnInit() {\n\n  }\n\n  sort(prop: string) {\n      this.sorterService.sort(this.customers, prop);\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-grid.component.ts","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CustomersComponent } from './customers.component';\nimport { CustomersCardComponent } from './customers-card.component';\nimport { CustomersGridComponent } from './customers-grid.component';\n\nconst routes: Routes = [\n  { path: '', component: CustomersComponent }\n];\n\n@NgModule({\n  imports: [ RouterModule.forChild(routes) ],\n  exports: [ RouterModule ]\n})\nexport class CustomersRoutingModule { \n  static components = [ CustomersComponent, CustomersCardComponent, CustomersGridComponent ];\n}\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers-routing.module.ts","module.exports = \"<div class=\\\"customers view indent\\\">\\n    <div class=\\\"container\\\">\\n        <header>\\n            <h3>\\n                <span class=\\\"glyphicon glyphicon-user\\\"></span>\\n                {{ title }}\\n            </h3>\\n        </header>\\n        <br />\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-10\\\">\\n                <div class=\\\"navbar\\\">\\n                    <ul class=\\\"nav navbar-nav\\\">\\n                        <li class=\\\"toolbar-item\\\">\\n                            <a (click)=\\\"changeDisplayMode(displayModeEnum.Card)\\\" [class.active]=\\\"displayMode === displayModeEnum.Card\\\">\\n                                <span class=\\\"glyphicon glyphicon-th-large\\\"></span> Card View\\n                            </a>\\n                        </li>\\n                        <li class=\\\"toolbar-item\\\">\\n                            <a (click)=\\\"changeDisplayMode(displayModeEnum.Grid)\\\" [class.active]=\\\"displayMode === displayModeEnum.Grid\\\">\\n                                <span class=\\\"glyphicon glyphicon-align-justify\\\"></span> List View\\n                            </a>\\n                        </li>\\n                        <li class=\\\"toolbar-item\\\">\\n                            <a (click)=\\\"changeDisplayMode(displayModeEnum.Map)\\\" [class.active]=\\\"displayMode === displayModeEnum.Map\\\">\\n                                <span class=\\\"glyphicon glyphicon-map-marker\\\"></span> Map View\\n                            </a>\\n                        </li>\\n                        <li class=\\\"toolbar-item\\\">\\n                            <a routerLink=\\\"/customers/0/edit\\\">\\n                                <span class=\\\"glyphicon glyphicon-plus\\\"></span> New Customer\\n                            </a>\\n                        </li>\\n                    </ul>\\n                    <cm-filter-textbox class=\\\"navbar-right\\\"\\n                     (changed)=\\\"filterChanged($event)\\\"></cm-filter-textbox>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <cm-customers-card \\n          [customers]=\\\"filteredCustomers\\\" \\n          [hidden]=\\\"displayMode !== displayModeEnum.Card\\\"></cm-customers-card>\\n    \\n        <cm-customers-grid \\n          [customers]=\\\"filteredCustomers\\\" \\n          [hidden]=\\\"displayMode !== displayModeEnum.Grid\\\"></cm-customers-grid>\\n\\n        <cm-map *ngIf=\\\"filteredCustomers.length\\\" \\n            [zoom]=\\\"2\\\" \\n            [enabled]=\\\"displayMode === displayModeEnum.Map\\\" \\n            [hidden]=\\\"displayMode !== displayModeEnum.Map\\\">\\n          <cm-map-point \\n            *ngFor=\\\"let customer of filteredCustomers\\\" \\n            [latitude]=\\\"customer.latitude\\\" \\n            [longitude]=\\\"customer.longitude\\\"\\n            [markerText]=\\\"'<h3>' + customer.firstName + ' ' + customer.lastName + '</a></h3>' + customer.city + ', ' + customer.state.name\\\"></cm-map-point>\\n        </cm-map>\\n\\n        <cm-pagination\\n            [totalItems]=\\\"totalRecords\\\" \\n            [pageSize]=\\\"pageSize\\\" \\n            (pageChanged)=\\\"pageChanged($event)\\\"></cm-pagination>\\n          \\n    </div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers.component.html\n// module id = ../../../../../src/app/customers/customers.component.html\n// module chunks = customers.module","import { Component, OnInit } from '@angular/core';\n\nimport { DataService } from '../core/services/data.service';\nimport { ICustomer, IPagedResults } from '../shared/interfaces';\nimport { FilterService } from '../core/services/filter.service';\n\n@Component({ \n  selector: 'cm-customers', \n  templateUrl: './customers.component.html'\n})\nexport class CustomersComponent implements OnInit {\n\n  title: string;\n  filterText: string;\n  customers: ICustomer[] = [];\n  filteredCustomers: ICustomer[] = [];\n  displayMode: DisplayModeEnum;\n  displayModeEnum = DisplayModeEnum;\n  totalRecords: number = 0;\n  pageSize: number = 10;\n\n  constructor(private dataService: DataService, private filterService: FilterService) { }\n  \n  ngOnInit() {\n    this.title = 'Customers';\n    this.filterText = 'Filter Customers:';\n    this.displayMode = DisplayModeEnum.Card;\n\n    this.getCustomersPage(1);\n  }\n\n  changeDisplayMode(mode: DisplayModeEnum) {\n      this.displayMode = mode;\n  }\n\n  pageChanged(page: number) {\n    this.getCustomersPage(page);\n  }\n\n  getCustomersPage(page: number) {\n    this.dataService.getCustomersPage((page - 1) * this.pageSize, this.pageSize)\n        .subscribe((response: IPagedResults<ICustomer[]>) => {\n          this.customers = this.filteredCustomers = response.results;\n          this.totalRecords = response.totalRecords;\n        },\n        (err: any) => console.log(err),\n        () => console.log('getCustomersPage() retrieved customers for page: ' + page));\n  }\n\n  filterChanged(data: string) {\n    if (data && this.customers) {\n        data = data.toUpperCase();\n        const props = ['firstName', 'lastName', 'city', 'state.name'];\n        this.filteredCustomers = this.filterService.filter<ICustomer>(this.customers, data, props);\n    }\n    else {\n      this.filteredCustomers = this.customers;\n    }\n  }\n}\n\nenum DisplayModeEnum {\n  Card = 0,\n  Grid = 1,\n  Map = 2\n}\n\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers.component.ts","import { NgModule }      from '@angular/core';\n\nimport { SharedModule }   from '../shared/shared.module';\nimport { CustomersRoutingModule } from './customers-routing.module';\n\n@NgModule({\n  imports:      [ CustomersRoutingModule, SharedModule ],\n  declarations: [ CustomersRoutingModule.components ]\n})\nexport class CustomersModule { }\n\n\n// WEBPACK FOOTER //\n// /Users/danwahlin/Dropbox/Projects/GitHub/Angular-JumpStart/src/app/customers/customers.module.ts"],"sourceRoot":"webpack:///"}